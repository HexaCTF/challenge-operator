version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  challenge-operator:
    image: hexactf/challenge-operator:latest
    network_mode: "host"
    volumes:
      - type: bind
        source: ${HOME}/.kube/config
        target: /home/nonroot/.kube/config
        read_only: true
    environment:
      DEVELOPMENT: "true"
      METRICS_ADDR: ":8081"
      KAFKA_BROKERS: "localhost:9093"
      LOG_LEVEL: "debug"
      KUBECONFIG: "/home/nonroot/.kube/config"
    depends_on:
      - kafka

  # flask-app:
  #   image: hexactf/challenge-api:latest
  #   ports:
  #     - "5001:5000"
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  #     KAFKA_TOPIC: "challenge-status"
  #     KAFKA_GROUP_ID: "challenge-consumer-group"
  #   volumes:
  #     - .:/app
  #     - type: bind
  #       source: ${HOME}/.kube/config
  #       target: /app/.kube/config
  #       read_only: true
  #   depends_on:
  #     - kafka
  #     - challenge-operator
